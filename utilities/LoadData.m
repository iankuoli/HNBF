function LoadData(DATA, ENV)
    global M                 % number of users
    global N                 % number of items
    global matX_train        % dim(M, N): consuming records for training
    global matX_test         % dim(M, N): consuming records for testing
    global matX_valid        % dim(M, N): consuming records for validation

    if strcmp(ENV, 'Linux')
        env_path = '/home/ian/Dataset/';
    elseif strcmp(ENV, 'Win')
        env_path = 'C:\Dataset\';
    else
        env_path = '/Users/iankuo/dataset/';
    end

    switch DATA
        case 'SmallToy'
            [ M, N ] = LoadUtilities(strcat(env_path, 'SmallToy_train.csv'), ...
                                     strcat(env_path, 'SmallToy_test.csv'), ...
                                     strcat(env_path, 'SmallToy_valid.csv'));
        case 'SmallToyML'
            [ M, N ] = LoadUtilities(strcat(env_path, 'SmallToyML_train.csv'), ...
                                     strcat(env_path, 'SmallToyML_test.csv'), ...
                                     strcat(env_path, 'SmallToyML_valid.csv'));
        case 'ML50'
            [ M, N ] = LoadUtilities(strcat(env_path, 'ML50_train.csv'), ...
                                     strcat(env_path, 'ML50_test.csv'), ...
                                     strcat(env_path, 'ML50_test.csv'));
        case 'MovieLens100K'
            [ M, N ] = LoadUtilities(strcat(env_path, 'MovieLens100K_train_v2.csv'), ...
                                     strcat(env_path, 'MovieLens100K_test_v2.csv'), ...
                                     strcat(env_path, 'MovieLens100K_valid_v2.csv'));
        case 'MovieLens1M'
            [ M, N ] = LoadUtilities(strcat(env_path, 'MovieLens1M_train.csv'), ...
                                     strcat(env_path, 'MovieLens1M_test.csv'), ...
                                     strcat(env_path, 'MovieLens1M_valid.csv'));
        case 'MovieLens20M'
            [ M, N ] = LoadUtilities(strcat(env_path, 'MovieLens20M_train.csv'), ...
                                     strcat(env_path, 'MovieLens20M_test.csv'), ...
                                     strcat(env_path, 'MovieLens20M_valid.csv'));
        case 'LastFm2K'
            [ M, N ] = LoadUtilities(strcat(env_path, 'LastFm2K_train.csv'), ...
                                     strcat(env_path, 'LastFm2K_test.csv'), ...
                                     strcat(env_path, 'LastFm2K_valid.csv'));
        case 'LastFm1K'
            [ M, N ] = LoadUtilities(strcat(env_path, 'LastFm1K_train.csv'), ...
                                     strcat(env_path, 'LastFm1K_test.csv'), ...
                                     strcat(env_path, 'LastFm1K_valid.csv'));
        case 'EchoNest'
            [ M, N ] = LoadUtilities(strcat(env_path, 'EchoNest_train.csv'), ...
                                     strcat(env_path, 'EchoNest_test.csv'), ...
                                     strcat(env_path, 'EchoNest_valid.csv'));
        case 'LastFm360K_2K'
            [ M, N ] = LoadUtilities(strcat(env_path, 'LastFm360K_2K_train.csv'), ...
                                     strcat(env_path, 'LastFm360K_2K_test.csv'), ...
                                     strcat(env_path, 'LastFm360K_2K_valid.csv'));
        case 'LastFm360K'
            [ M, N ] = LoadUtilities(strcat(env_path, 'LastFm360K_train.csv'), ...
                                     strcat(env_path, 'LastFm360K_test.csv'), ...
                                     strcat(env_path, 'LastFm360K_valid.csv'));
        case 'Jester2'
            [ M, N ] = LoadUtilities(strcat(env_path, 'Jester2_train.csv'), ...
                                     strcat(env_path, 'Jester2_test.csv'), ...
                                     strcat(env_path, 'Jester2_valid.csv'));
        case 'ModCloth'
            [ M, N ] = LoadUtilities(strcat(env_path, 'ModCloth_train.csv'), ...
                                     strcat(env_path, 'ModCloth_test.csv'), ...
                                     strcat(env_path, 'ModCloth_valid.csv'));
        case 'EachMovie'
            [ M, N ] = LoadUtilities(strcat(env_path, 'EachMovie_train.csv'), ...
                                     strcat(env_path, 'EachMovie_test.csv'), ...
                                     strcat(env_path, 'EachMovie_valid.csv'));
        case 'AmazonElectronics'
            [ M, N ] = LoadUtilities(strcat(env_path, 'AmazonElectronics_train.csv'), ...
                                     strcat(env_path, 'AmazonElectronics_test.csv'), ...
                                     strcat(env_path, 'AmazonElectronics_valid.csv'));
        case 'ML100KPos'
            [ M, N ] = LoadUtilities(strcat(env_path, 'ml-100k/movielens-100k-train_original.txt'), ...
                                     strcat(env_path, 'ml-100k/movielens-100k-test_original.txt'), ...
                                     strcat(env_path, 'ml-100k/movielens-100k-test_original.txt'));
            matX_train(matX_train < 4) = 0;
            matX_train(matX_train > 3.99) = 5;
            matX_test(matX_test < 4) = 0;
            matX_test(matX_test > 3.99) = 5;
            matX_valid(matX_valid < 4) = 0;
            matX_valid(matX_valid > 3.99) = 5;
    end

    if max(max(matX_train)) == 10
        matX_train = matX_train / 2;
        matX_test = matX_test / 2;
        matX_valid = matX_valid / 2;
    end
end

